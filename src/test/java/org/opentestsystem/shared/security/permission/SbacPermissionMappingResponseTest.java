/*******************************************************************************
 * Educational Online Test Delivery System 
 * Copyright (c) 2014 American Institutes for Research
 *   
 * Distributed under the AIR Open Source License, Version 1.0 
 * See accompanying file AIR-License-1_0.txt or at
 * https://bitbucket.org/sbacoss/eotds/wiki/AIR_Open_Source_License
 ******************************************************************************/
package org.opentestsystem.shared.security.permission;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;

import java.io.File;
import java.io.IOException;
import java.util.Map;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.opentestsystem.shared.security.domain.permission.SbacPermissionMappingResponse;
import org.opentestsystem.shared.security.domain.permission.RoleToPermissionMapping;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

import com.fasterxml.jackson.core.JsonParseException;
import com.fasterxml.jackson.databind.JsonMappingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.google.common.base.Charsets;
import com.google.common.io.Files;

//need spring context to load inject file, so using lite-context.xml
@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(locations = { "classpath:spring/lite-context.xml" })
public class SbacPermissionMappingResponseTest {
    @Value("classpath:mapping.json")
    private File testFile;

    @Autowired
    protected ObjectMapper objectMapper;

    @Test
    public void testJsonParse() throws JsonParseException, JsonMappingException {
        assertNotNull("no file found", testFile);

        try {
            SbacPermissionMappingResponse respObj = objectMapper.readValue(Files.toString(testFile, Charsets.UTF_8), SbacPermissionMappingResponse.class);
            assertNotNull("ResponseObject is null", respObj);
            assertEquals("Not enough Permssions roles", 3, respObj.getValue().size());
            Map<String, RoleToPermissionMapping> roles = respObj.convertToRoles();
            assertEquals("Not enough mapped roles", 3, roles.keySet().size());
        } catch (IOException e) {
            e.printStackTrace();
        }

    }

}
