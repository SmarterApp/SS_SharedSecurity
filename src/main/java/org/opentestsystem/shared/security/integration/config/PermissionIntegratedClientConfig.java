/*******************************************************************************
 * Educational Online Test Delivery System 
 * Copyright (c) 2014 American Institutes for Research
 *   
 * Distributed under the AIR Open Source License, Version 1.0 
 * See accompanying file AIR-License-1_0.txt or at
 * https://bitbucket.org/sbacoss/eotds/wiki/AIR_Open_Source_License
 ******************************************************************************/
package org.opentestsystem.shared.security.integration.config;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.http.client.HttpComponentsClientHttpRequestFactory;
import org.springframework.http.converter.HttpMessageConverter;
import org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean;
import org.springframework.http.converter.json.MappingJackson2HttpMessageConverter;
import org.springframework.web.client.RestOperations;
import org.springframework.web.client.RestTemplate;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.datatype.joda.JodaModule;

/**
 * Spring configuration for the integrated client.
 * This configuration is only active when one of the active profiles is "permission.client.impl.integration".
 */
@Configuration
// @Profile("permission.client.impl.integration")
public class PermissionIntegratedClientConfig {

    @Bean
    public HttpComponentsClientHttpRequestFactory permissionClientRequestFactory() {
        return new HttpComponentsClientHttpRequestFactory();
    }

    @Bean
    public RestOperations permissionRestTemplate() {
        final RestTemplate restTemplate = new RestTemplate(permissionClientRequestFactory());
        for (final HttpMessageConverter<?> messageConverter : restTemplate.getMessageConverters()) {
            if (messageConverter instanceof MappingJackson2HttpMessageConverter) {
                final MappingJackson2HttpMessageConverter mappingJackson2HttpMessageConverter = (MappingJackson2HttpMessageConverter) messageConverter;
                mappingJackson2HttpMessageConverter.setObjectMapper(permissionObjectMapper());
                break;
            }
        }
        return restTemplate;
    }

    @Bean
    public ObjectMapper permissionObjectMapper() {
        final Jackson2ObjectMapperFactoryBean omfb = new Jackson2ObjectMapperFactoryBean();
        omfb.setIndentOutput(true);
        omfb.setSimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ");
        omfb.afterPropertiesSet();

        final ObjectMapper mapper = omfb.getObject();
        mapper.registerModule(new JodaModule());

        return mapper;
    }
}
