/*******************************************************************************
 * Educational Online Test Delivery System 
 * Copyright (c) 2014 American Institutes for Research
 *   
 * Distributed under the AIR Open Source License, Version 1.0 
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.shared.security.service;

import java.util.Collection;
import java.util.HashSet;
import java.util.List;
import java.util.Map;

import org.opentestsystem.shared.progman.client.domain.Tenant;
import org.opentestsystem.shared.security.domain.SbacEntity;
import org.opentestsystem.shared.security.domain.permission.RoleToPermissionMapping;
import org.opentestsystem.shared.security.integration.PermissionClient;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Profile;
import org.springframework.stereotype.Service;

@Service
@Profile("!special.role.required")
public class RolesAndPermissionsServiceImpl extends AbsractRolesAndPermissionsService implements RolesAndPermissionsService {

    @Value("${component.name:}")
    protected String componentName;

    @Autowired
    private PermissionClient permissionClient;

    @Autowired
    private TenancyService tenancyService;

    @Override
    public void setPermissionClient(final PermissionClient inPermissionClient) {
        this.permissionClient = inPermissionClient;
    }

    @Override
    protected List<Tenant> getApplicableTenants(final HashSet<SbacEntity> entities) {
        return tenancyService.getApplicableTenants(entities);
    }

    @Override
    public Map<String, RoleToPermissionMapping> getKnownRoles() {
        return permissionClient.getPermissionByComponentName(componentName).convertToRoles();
    }

    @Override
    public Collection<String> getKnownRoleNames() {
        return permissionClient.getPermissionByComponentName(componentName).convertToRoles().keySet();
    }

    @Override
    protected String getComponentName() {
        return componentName;
    }
}
