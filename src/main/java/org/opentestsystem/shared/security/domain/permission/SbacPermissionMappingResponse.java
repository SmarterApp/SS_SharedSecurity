/*******************************************************************************
 * Educational Online Test Delivery System 
 * Copyright (c) 2014 American Institutes for Research
 *   
 * Distributed under the AIR Open Source License, Version 1.0 
 * See accompanying file AIR-License-1_0.txt or at
 * https://bitbucket.org/sbacoss/eotds/wiki/AIR_Open_Source_License
 ******************************************************************************/
package org.opentestsystem.shared.security.domain.permission;

import java.util.List;
import java.util.Map;

import org.apache.commons.lang.builder.ToStringBuilder;
import org.apache.commons.lang.builder.ToStringStyle;
import org.opentestsystem.shared.security.domain.SbacPermission;

import java.util.ArrayList;
import java.util.HashMap;

public class SbacPermissionMappingResponse {

    private String message;
    private String status;
    private List<SbacPermissionRole> value;

    /**
     * @return the message
     */
    public String getMessage() {
        return this.message;
    }

    /**
     * @param inMessage the message to set
     */
    public void setMessage(final String inMessage) {
        this.message = inMessage;
    }

    /**
     * @return the status
     */
    public String getStatus() {
        return this.status;
    }

    public List<SbacPermissionRole> getValue() {
        return this.value;
    }

    public void setValue(final List<SbacPermissionRole> inValue) {
        this.value = inValue;
    }

    /**
     * @param inStatus the status to set
     */
    public void setStatus(final String inStatus) {
        this.status = inStatus;
    }

    public Map<String, RoleToPermissionMapping> convertToRoles() {
        final Map<String, RoleToPermissionMapping> ret = new HashMap<>();
        if (this.value != null) {
            for (final SbacPermissionRole role : this.value) {
                if (role.getMappings() != null) {
                    List<SbacPermission> permissionsForThisRole = new ArrayList<>();
                    for (final SbacPermissionMapping mapping : role.getMappings()) {
                        if (mapping.getPermissions() != null) {
                            for (final SbacPermission permission : mapping.getPermissions()) {
                                permission.setComponentName(mapping.getComponent());
                                permissionsForThisRole.add(permission);
                            }
                        }
                    }
                    RoleToPermissionMapping roleToPermissionMapping = new RoleToPermissionMapping(role.getRole(), permissionsForThisRole, role.isProtected());
                    ret.put(roleToPermissionMapping.getRoleName(), roleToPermissionMapping);
                }
            }
        }
        return ret;
    }

    @Override
    public String toString() {
        return ToStringBuilder.reflectionToString(this, ToStringStyle.SHORT_PREFIX_STYLE);
    }

}
