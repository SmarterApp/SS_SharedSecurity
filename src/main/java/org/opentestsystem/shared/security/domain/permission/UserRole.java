/*******************************************************************************
 * Educational Online Test Delivery System 
 * Copyright (c) 2014 American Institutes for Research
 *   
 * Distributed under the AIR Open Source License, Version 1.0 
 * See accompanying file AIR-License-1_0.txt or at
 * https://bitbucket.org/sbacoss/eotds/wiki/AIR_Open_Source_License
 ******************************************************************************/
package org.opentestsystem.shared.security.domain.permission;

import java.io.Serializable;
import java.util.Iterator;
import java.util.List;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

@JsonIgnoreProperties(ignoreUnknown = true)
public class UserRole implements Serializable {

    private static final long serialVersionUID = 4649628597545086828L;
    private final String PROTECTED = "PROTECTEDROLE";

    private String role;
    private boolean isProtected = false;
    private List<SbacPermissionEntity> allowableEntities;

    /**
     * @return the role
     */
    public String getRole() {
        return role;
    }

    /**
     * @param role the role to set
     */
    public void setRole(final String role) {
        this.role = role;
    }

    /**
     * @return the allowableEntities
     */
    public List<SbacPermissionEntity> getAllowableEntities() {
        return allowableEntities;
    }

    /**
     * @param allowableEntities the allowableEntities to set
     */
    public void setAllowableEntities(final List<SbacPermissionEntity> allowableEntities) {
        this.allowableEntities = allowableEntities;
        for (Iterator<SbacPermissionEntity> iterator = this.allowableEntities.iterator(); iterator.hasNext(); ) {
            SbacPermissionEntity sbacPermissionEntity = iterator.next();
            if (sbacPermissionEntity.getEntity().equals(PROTECTED)) {
                isProtected = true;
                iterator.remove();
            }
        }
    }

    public boolean isProtected() {
        return isProtected;
    }

}
