/*******************************************************************************
 * Educational Online Test Delivery System 
 * Copyright (c) 2014 American Institutes for Research
 *   
 * Distributed under the AIR Open Source License, Version 1.0 
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.shared.security.domain;

import java.util.Comparator;

import org.apache.commons.lang.builder.CompareToBuilder;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;
import org.apache.commons.lang.builder.ToStringStyle;
import org.springframework.security.core.GrantedAuthority;

public class SbacPermission implements GrantedAuthority{

    private static final long serialVersionUID = -8776377381725213405L;
    public static final String ROLE_PREFIX = "ROLE_";
    private String name;
    private String componentName;

    public String getName() {
        return this.name;
    }

    public void setName(final String inName) {
        this.name = inName;
    }

    public String getComponentName() {
        return this.componentName;
    }

    public void setComponentName(final String inComponentName) {
        this.componentName = inComponentName;
    }

    @Override
    public String toString() {
        return ToStringBuilder.reflectionToString(this, ToStringStyle.SHORT_PREFIX_STYLE);
    }
    @Override
    public boolean equals(final Object inObj) {
        return EqualsBuilder.reflectionEquals(this, inObj);
    }
    @Override
    public String getAuthority() {
        return ROLE_PREFIX + getName();
    }

    public static class GrantedAuthorityComparator implements Comparator<GrantedAuthority> {
        @Override
        public int compare(final GrantedAuthority inAuth1, final GrantedAuthority inAuth2) {
            return new CompareToBuilder().append(inAuth1.getAuthority(), inAuth2.getAuthority()).toComparison();
        }
    }
}
