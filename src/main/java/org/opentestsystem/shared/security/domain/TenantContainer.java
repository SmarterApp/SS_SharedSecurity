/*******************************************************************************
 * Educational Online Test Delivery System 
 * Copyright (c) 2014 American Institutes for Research
 *   
 * Distributed under the AIR Open Source License, Version 1.0 
 * See accompanying file AIR-License-1_0.txt or at
 * https://bitbucket.org/sbacoss/eotds/wiki/AIR_Open_Source_License
 ******************************************************************************/
package org.opentestsystem.shared.security.domain;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;

import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;
import org.apache.commons.lang.builder.ToStringStyle;
import org.opentestsystem.shared.progman.client.domain.Tenant;

public class TenantContainer implements Serializable {

    private static final long serialVersionUID = -2808024459843360214L;

    private final List<Tenant> tenants = new ArrayList<Tenant>();

    public List<Tenant> getTenants() {
        return this.tenants;
    }

    public void addAllTenants(final List<Tenant> inTenants) {
        this.tenants.addAll(inTenants);
    }

    public void addTenant(final Tenant inTenant) {
        this.tenants.add(inTenant);
    }

    @Override
    public boolean equals(final Object obj) {
        return EqualsBuilder.reflectionEquals(this, obj);
    }

    @Override
    public String toString() {
        return ToStringBuilder.reflectionToString(this, ToStringStyle.SHORT_PREFIX_STYLE);
    }

    @Override
    public int hashCode() {
        return HashCodeBuilder.reflectionHashCode(this);
    }

    public Tenant getTenantById(final String inTenantId) {
        if (getTenants() != null) {
            for (final Tenant tenant : getTenants()) {
                if (tenant.getId().equals(inTenantId)) {
                    return tenant;
                }
            }
        }
        return null;
    }
}
